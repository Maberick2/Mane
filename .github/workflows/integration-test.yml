name: Integration Tests  

on: [push, pull_request]  

jobs:  
  integration-test:  
    runs-on: ubuntu-latest  
    steps:  
      - uses: actions/checkout@v3  
      
      - name: Set up Node.js  
        uses: actions/setup-node@v3  
        with:  
          node-version: '20'  
          cache: 'yarn'  

      - name: Set up Docker Buildx  
        uses: docker/setup-buildx-action@v3  

      - name: Docker login  
        uses: docker/login-action@v3  
        with:  
          username: ${{ vars.DOCKER_USERNAME }}  
          password: ${{ secrets.DOCKER_PASSWORD }}  

      - name: Create test directories  
        run: |  
          mkdir -p reports  
          mkdir -p coverage  
          mkdir -p $RUNNER_TEMP  
          mkdir -p $RUNNER_TOOL_CACHE  
          chmod -R 777 reports coverage $RUNNER_TEMP $RUNNER_TOOL_CACHE  
        env:  
          RUNNER_TEMP: /tmp/github_runner  
          RUNNER_TOOL_CACHE: /tmp/github_tool_cache  

      - name: Enable corepack  
        run: |  
          corepack enable  
          yarn set version stable  

      - name: Install dependencies  
        run: |  
          yarn install --frozen-lockfile  
          yarn add -D @jest/globals @types/jest jest-junit  

      - name: Run integration tests  
        run: |  
          yarn run test:integration  
        env:  
          RUNNER_TEMP: /tmp/github_runner  
          RUNNER_TOOL_CACHE: /tmp/github_tool_cache  
          NODE_ENV: test  
          JEST_JUNIT_OUTPUT_DIR: ./reports  
          JEST_JUNIT_OUTPUT_NAME: junit.xml  
          DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}  
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  

      - name: Upload test results  
        if: always()  
        uses: actions/upload-artifact@v3  
        with:  
          name: test-reports  
          path: |  
            reports/  
            coverage/